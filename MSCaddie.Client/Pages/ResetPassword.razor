@page "/ResetPassword/{email}/{token}"
@inject HttpClient httpClient
@inject IJSRuntime js
@inject AuthenticationStateProvider authStateProvider
@inject NavigationManager navManager


<div class="row">
    <EditForm class="col-lg-4 offset-lg-3 pt-4 pb-4 border" Model="@request"
              OnValidSubmit="@HandleValidSubmit" 
              OnInvalidSubmit="@HandleInvalidValidSubmit">

        <DataAnnotationsValidator />
        <div class="mb-4 text-center">
            <h3>Nulstil password</h3>
        </div>
        <div class="mb-4">
            <label>Password</label>
            <input @bind-value="request.Password" type="password" class="form-control" placeholder="Password" />
            <ValidationMessage class="offset-md-1 col-md-8 text-danger" For="@(() => request.Password)" />
        </div>
        <div class="mb-4">
            <label>Confirm password</label>
            <input @bind-value="request.ConfirmPassword" type="password" class="form-control" placeholder="ConfirmPassword" />
            <ValidationMessage class="offset-md-1 col-md-8 text-danger" For="@(() => request.ConfirmPassword)" />
        </div>
        <div class="mb-4 d-grid gap-2">
            <button type="submit" class="btn btn-primary">Nyt password</button>
        </div>
        <p>@status</p>
        <p class="text-danger">@message</p>
    </EditForm>
</div>

@code {

    [Parameter] public string email { get; set; }
    [Parameter] public string token { get; set; }

    public ResetPasswordRequest request { get; set; } = new();
    private string? message;
    private string? status;

    protected override async Task OnInitializedAsync()
    {
        request.Token = token;
        request.Email = email;
    }
    protected async Task HandleValidSubmit()
    {
        var res = await httpClient.PostAsJsonAsync<ResetPasswordRequest>("/api/auth/ResetPassword", request);
        string s = await res.Content.ReadAsStringAsync();
        if (res.IsSuccessStatusCode)
        {
            status = "Password er nu ændret og du kan logge ind her";
        }
          else
        {
            message = $"Invalid User Name or Password";
        }
    }
    protected async Task HandleInvalidValidSubmit()
    {
        message = $"Årh for s.. - hvad er der nu galt {DateTime.Now.ToString()}";
    }
}
