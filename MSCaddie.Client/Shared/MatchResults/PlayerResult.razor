@inherits PlayerResultBase
@page "/match/{MatchId:int}/playerresult"

@using MSCaddie.Shared.Dtos


@* <BSContainer class="content pb-5">
    <RadzenCard>
    <h3>Spiller liste</h3>
@if (results == null)
{
    <p>Henter ...</p>
}
else
{
    <RadzenDataGrid @ref="playerGrid" AllowAlternatingRows="false" EditMode="DataGridEditMode.Single"
                    Data="@players" TItem="PlayerModel" RowUpdate="@OnUpdateRow" RowCreate="@OnCreateRow">
        <HeaderTemplate>
            <RadzenButton ButtonStyle="ButtonStyle.Success" Icon="add_circle" Text="Ny spiller" Click="@InsertRow" Disabled="@Editing" />
        </HeaderTemplate>
        <Columns>

            <RadzenDataGridColumn Property="@nameof(PlayerModel.PlayerName)" Title="Navn">
                <EditTemplate Context="player">
                    <RadzenTextBox @bind-Value="player.PlayerName" Style="width:200px; display: block" Name="PlayerName" aria-label="Angiv et navn" />
                    <RadzenRequiredValidator Text="Navn skal angives" Component="PlayerName" Popup="true" />
                </EditTemplate>
            </RadzenDataGridColumn>

            <RadzenDataGridColumn Property="@nameof(PlayerModel.HcpIndex)" Title="HcpIndex" TextAlign="TextAlign.Center" CssClass="col">
                <Template Context="player">
                    @String.Format("{0:F1}", player.HcpIndex)
                </Template>
                <EditTemplate Context="player">
                    <RadzenNumeric @bind-Value="player.HcpIndex" Style="width:100%" InputAttributes="@(new Dictionary<string,object>(){ { "aria-label", "Angiv spillers hcp index" }})" />
                </EditTemplate>
            </RadzenDataGridColumn>

            <RadzenDataGridColumn Context="player" Width="160px" TextAlign="TextAlign.Right" Frozen="true" FrozenPosition="FrozenColumnPosition.Right">
                <Template Context="player">
                    <RadzenButton Icon="edit" ButtonStyle="ButtonStyle.Light" Variant="Variant.Flat" Size="Radzen.ButtonSize.Medium" Click="@(args => EditRow(player))" @onclick:stopPropagation="true">
                    </RadzenButton>
                    <RadzenButton ButtonStyle="ButtonStyle.Danger" Icon="delete" Variant="Variant.Flat" Shade="Shade.Lighter" Size="Radzen.ButtonSize.Medium" class="rz-my-1 rz-ms-1" Click="@(args => DeleteRow(player))" @onclick:stopPropagation="true">
                    </RadzenButton>
                </Template>
                <EditTemplate Context="player">
                    <RadzenButton Icon="check" ButtonStyle="ButtonStyle.Success" Variant="Variant.Flat" Size="Radzen.ButtonSize.Medium" Click="@((args) => SaveRow(player))" aria-label="Save">
                    </RadzenButton>
                    <RadzenButton Icon="close" ButtonStyle="ButtonStyle.Light" Variant="Variant.Flat" Size="Radzen.ButtonSize.Medium" class="rz-my-1 rz-ms-1" Click="@((args) => CancelEdit(player))" aria-label="Cancel">
                    </RadzenButton>
                    <RadzenButton ButtonStyle="ButtonStyle.Danger" Icon="delete" Variant="Variant.Flat" Shade="Shade.Lighter" Size="Radzen.ButtonSize.Medium" class="rz-my-1 rz-ms-1" Click="@(args => DeleteRow(player))" aria-label="Delete">
                    </RadzenButton>
                </EditTemplate>
            </RadzenDataGridColumn>
        </Columns>
    </RadzenDataGrid>
}
    </RadzenCard>
</BSContainer>

<ConfirmDialog @ref="dialog" /> *@



@if (Match != null)
{

@* <Row>
    <Container Margin="Margin.Is4.FromTop">

        <Fields>
            <Field Horizontal>
                <FieldLabel ColumnSize="ColumnSize.Is3">Spiller</FieldLabel>
                <FieldBody ColumnSize="ColumnSize.Is4">
                    <InputText id="field-sitewide-search" class="form-control col-md-4" type="text" name="q"
                               placeholder="spiller navn" autoComplete="off" list="suggestions"
                           @onclick=FetchOptions @bind-Value="SearchTerm"
                           @oninput="SearchTermChanged"
                           @onmouseover="() => SearchHover = true"
                           @onmouseout="() => SearchHover = false"
                           @onfocusin="() => SearchFocus = true"
                           @onfocusout="() => SearchFocus = false" />
            
                    <datalist id="suggestions">
                        @foreach (var res in results ?? Enumerable.Empty<MatchResultDto>())
                        {
                            <option>@res.Fullname</option>
                        }
                    </datalist>
                </FieldBody>
            </Field>
        </Fields>
    </Container>
</Row>
<Row>
    <Column Margin="Margin.Is4.FromTop">
    @if (result != null && matchViewModel != null)
        {
            <Fields Margin="Margin.Is2.FromTop">
                <Field Horizontal>
                    <FieldLabel ColumnSize="ColumnSize.Is3">Hcp</FieldLabel>
                    <FieldBody ColumnSize="ColumnSize.Is3">
                            <NumericEdit @bind-Value="@result.Hcp"></NumericEdit>
                    </FieldBody>
                </Field>
            </Fields>
                     
            @if (matchViewModel.IsStrokePlay) {
            <Fields Margin="Margin.Is2.FromTop">
                <Field Horizontal>
                    <FieldLabel ColumnSize="ColumnSize.Is3">Brutto</FieldLabel>
                    <FieldBody ColumnSize="ColumnSize.Is3">
                        <NumericEdit @bind-Value="@result.Brutto"></NumericEdit>
                    </FieldBody>
                </Field>
            </Fields>
            <Fields Margin="Margin.Is2.FromTop">
               <Field Horizontal>
                    <FieldLabel ColumnSize="ColumnSize.Is3">Netto</FieldLabel>
                    <FieldBody ColumnSize="ColumnSize.Is3">
                        <NumericEdit @bind-Value="@result.Netto"></NumericEdit>
                    </FieldBody>
                </Field>
            </Fields>
            <Fields Margin="Margin.Is2.FromTop">
               <Field Horizontal>
                    <FieldLabel ColumnSize="ColumnSize.Is3">Puts</FieldLabel>
                    <FieldBody ColumnSize="ColumnSize.Is3">
                        <NumericEdit @bind-Value="@result.Puts"></NumericEdit>
                    </FieldBody>
                </Field>
            </Fields>
            }
            @if (matchViewModel.IsHallington)
            {
            <Fields Margin="Margin.Is2.FromTop">
                <Field Horizontal>
                    <FieldLabel ColumnSize="ColumnSize.Is3">Hallington</FieldLabel>
                    <FieldBody ColumnSize="ColumnSize.Is3">
                            <NumericEdit @bind-Value="@result.Hallington"></NumericEdit>
                    </FieldBody>
                </Field>
            </Fields>
            }
       
            <Fields Margin="Margin.Is2.FromTop">
                <Field Horizontal>
                    <FieldLabel ColumnSize="ColumnSize.Is3">Points</FieldLabel>
                    <FieldBody ColumnSize="ColumnSize.Is3">
                        <NumericEdit @bind-Value="@result.Points"></NumericEdit>
                    </FieldBody>
                </Field>
            </Fields>
            <Fields Margin="Margin.Is2.FromTop">
                <Field Horizontal>
                    <FieldLabel ColumnSize="ColumnSize.Is3">Birdies</FieldLabel>
                    <FieldBody ColumnSize="ColumnSize.Is1">
                        <Check TValue="bool" @bind-Checked="@result.InBirdies" Width="Width.Max100" Flex="Flex.JustifyContent.Between.AlignSelf.Center"></Check>
                    </FieldBody>
                    <FieldBody ColumnSize="ColumnSize.Is2">
                        <NumericEdit @bind-Value="@result.Birdies"></NumericEdit>
                    </FieldBody>
                </Field>
            </Fields>
             
            @if (matchViewModel.Shootout)
            {
            <Fields Margin="Margin.Is2.FromTop">
                <Field Horizontal>
                    <FieldLabel ColumnSize="ColumnSize.Is3">Shootout</FieldLabel>
                    <FieldBody ColumnSize="ColumnSize.Is3">
                    <NumericEdit @bind-Value="@result.Shootout"></NumericEdit>
                    </FieldBody>
                </Field>
            </Fields>
            }
            <Fields Margin="Margin.Is2.FromTop">
                <Field Horizontal>
                        <FieldLabel ColumnSize="ColumnSize.Is3">Spiser med</FieldLabel>
                        <FieldBody ColumnSize="ColumnSize.Is2">
                        <Check TValue="bool" @bind-Checked="@result.Dining" Width="Width.Max100" Flex="Flex.JustifyContent.Between.AlignSelf.Center"></Check>
                    </FieldBody>
                </Field>
            </Fields>
        <Button Color="Color.Primary" Clicked="@HandleValidSubmit">Gem</Button>

        }
    </Column>
</Row>
*@
}


